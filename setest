#!/usr/bin/env ruby
require 'selenium-webdriver'
require 'thor'

class TestRunnerCLI < Thor
  desc "test", "Run test suite"
  method_option :host, :aliases => '-h', :required => true, :desc => "Remote WD host"
  method_option :user, :aliases => '-u', :required => true, :desc => "API user"
  method_option :key, :aliases => '-k', :required => true, :desc => "API Key"
  method_option :port, :aliases => '-p', :default => '4444', :desc => "Remote WD port (default 4444)"
  method_option :platform, :desc => "OS to launch", :default => 'Linux'
  method_option :browser, :aliases => '-b', :desc => "Browser to launch", :default => 'chrome'
  method_option :version, :aliases => '-v', :desc => "Browser version to use", :default => '60'
  method_option :selenium, :aliases => '-s', :desc => "Selenium version", :default => ''
  method_option :chromedriver, :desc => "Chromedriver version", :default => ''
  method_option :container, :aliases => '-c', :type => :boolean, :default => false
  method_option :video, :type => :boolean, :default => true
  method_option :screenshot, :type => :boolean, :default => true

  def test
    caps = {
      platform: options[:platform],
      browserName: options[:browser],
      version: options[:version],
      seleniumVersion: options[:selenium],
      chromedriverVersion: options[:chromedriver],
      _containerizedChef: options[:container],
      recordVideo: options[:video],
      recordScreenshots: options[:screenshot]
    }
    puts "Running test with options: #{options.to_s} and caps #{caps}"

    wd_url="http://#{options[:user]}:#{options[:key]}@#{options[:host]}:#{options[:port]}/wd/hub"
    puts "wd_url: #{wd_url}"
    base_url='https://www.saucelabs.com'
    puts "starting browser for cap #{caps.to_json}"
    driver = Selenium::WebDriver.for(:remote, url: wd_url, desired_capabilities: caps)
    driver.manage.timeouts.implicit_wait = 10
    driver.get("#{base_url}/test-guinea-pig.html")
    to_type = '0 1 2 3 4 5 6 7 8 9 '\
              'a b c d e f g h j k l m n o p q r s t u v w x y z'
    textarea = driver.find_element(:id, 'comments')
    textarea.send_keys(to_type)
    if driver.title != 'I am a page title - Sauce Labs'
      puts "ERROR: Page had wrong title: #{driver.title}"
      exit(1)
    end
    puts "\nTest completed"
    driver.quit()
  end
  default_task :test
end

TestRunnerCLI.start(ARGV)